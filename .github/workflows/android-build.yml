name: Build Android Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        default: 'v0.1.0'
        type: string
      update_detail:
        description: 'Update detail'
        required: false
        default: ''
        type: string

permissions:
  contents: write
  packages: write

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: aarch64-linux-android,armv7-linux-androideabi,i686-linux-android,x86_64-linux-android

    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        cmdline-tools-version: 9477386
        accept-android-sdk-licenses: true
        packages: "platform-tools platforms;android-34 build-tools;34.0.0 ndk;25.2.9519653 cmake;3.22.1"

    - name: Install dependencies
      run: npm ci

    - name: Install Tauri CLI
      run: npm install -g @tauri-apps/cli@latest

    - name: Setup Android environment
      run: |
        echo "ANDROID_HOME=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        echo "NDK_HOME=$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> $GITHUB_ENV

    - name: Build Android APK
      run: |
        cd src-tauri
        npx tauri android init
        npx tauri android build --apk

    - name: Decode Keystore
      run: |
        # Remove any whitespace and decode base64 keystore
        echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | tr -d '\n\r\t ' | base64 -d > keystore.jks
        # Verify keystore file was created
        if [ ! -f keystore.jks ]; then
          echo "Failed to create keystore file"
          exit 1
        fi
        echo "Keystore decoded successfully"

    - name: Sign APK
      run: |
        # Find the unsigned APK
        UNSIGNED_APK=$(find src-tauri/gen/android -name "*-unsigned.apk" -o -name "*.apk" | head -1)
        if [ -z "$UNSIGNED_APK" ]; then
          echo "No APK found to sign"
          exit 1
        fi
        
        # Create signed APK name
        SIGNED_APK="${UNSIGNED_APK%-unsigned.apk}-signed.apk"
        if [ "$SIGNED_APK" = "$UNSIGNED_APK" ]; then
          SIGNED_APK="${UNSIGNED_APK%.apk}-signed.apk"
        fi
        
        # Sign the APK
        $ANDROID_HOME/build-tools/34.0.0/apksigner sign \
          --ks keystore.jks \
          --ks-key-alias "${{ secrets.ANDROID_KEY_ALIAS }}" \
          --ks-pass pass:"${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" \
          --key-pass pass:"${{ secrets.ANDROID_KEY_PASSWORD }}" \
          --out "$SIGNED_APK" \
          "$UNSIGNED_APK"
        
        # Verify the signature
        $ANDROID_HOME/build-tools/34.0.0/apksigner verify "$SIGNED_APK"
        
        echo "APK signed successfully: $SIGNED_APK"

    - name: Clean up keystore
      run: rm -f keystore.jks

    - name: Find APK files
      id: find-apk
      run: |
        # Prefer signed APK over unsigned APK
        APK_PATH=$(find src-tauri/gen/android -name "*-signed.apk" -type f | head -1)
        if [ -z "$APK_PATH" ]; then
          APK_PATH=$(find src-tauri/gen/android -name "*.apk" -type f | head -1)
        fi
        echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT
        echo "apk_name=$(basename $APK_PATH)" >> $GITHUB_OUTPUT

    - name: Rename APK file
      id: rename-apk
      run: |
        OLD_APK_PATH="${{ steps.find-apk.outputs.apk_path }}"
        NEW_APK_NAME="delin-${{ github.event.inputs.version }}-android.apk"
        NEW_APK_PATH="$(dirname $OLD_APK_PATH)/$NEW_APK_NAME"
        mv "$OLD_APK_PATH" "$NEW_APK_PATH"
        echo "renamed_apk_path=$NEW_APK_PATH" >> $GITHUB_OUTPUT
        echo "renamed_apk_name=$NEW_APK_NAME" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event.inputs.version }}
        name: ${{ github.event.inputs.version }}
        body: |
          ## Update detail
          ${{ github.event.inputs.update_detail }}
        files: |
          ${{ steps.rename-apk.outputs.renamed_apk_path }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Summary
      run: |
        echo "## 构建完成 ✅" >> $GITHUB_STEP_SUMMARY
        echo "**版本:** ${{ github.event.inputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "**APK:** ${{ steps.rename-apk.outputs.renamed_apk_name }}" >> $GITHUB_STEP_SUMMARY