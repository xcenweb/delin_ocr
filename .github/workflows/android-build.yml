name: Build Android APK

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        default: 'v0.1.0'
        type: string

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: aarch64-linux-android,armv7-linux-androideabi,i686-linux-android,x86_64-linux-android

    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        cmdline-tools-version: 9477386
        accept-android-sdk-licenses: true
        packages: "platform-tools platforms;android-34 build-tools;34.0.0 ndk;25.2.9519653 cmake;3.22.1"

    - name: Install dependencies
      run: npm ci

    - name: Install Tauri CLI
      run: npm install -g @tauri-apps/cli@latest

    - name: Setup Android environment
      run: |
        echo "ANDROID_HOME=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        echo "NDK_HOME=$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> $GITHUB_ENV
        echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH
        echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
        # Verify installations
        echo "Android SDK Root: $ANDROID_SDK_ROOT"
        echo "Verifying NDK installation..."
        ls -la $ANDROID_SDK_ROOT/ndk/25.2.9519653/ && echo "✅ NDK 25.2.9519653 found" || echo "❌ NDK not found"
        echo "Verifying build-tools..."
        ls -la $ANDROID_SDK_ROOT/build-tools/34.0.0/ && echo "✅ Build-tools 34.0.0 found" || echo "❌ Build-tools not found"

    - name: Generate Android project
      run: |
        cd src-tauri
        tauri android init

    - name: Build Android APK
      run: |
        cd src-tauri
        tauri android build --apk

    - name: Find APK files
      id: find-apk
      run: |
        APK_PATH=$(find src-tauri/gen/android -name "*.apk" -type f | head -1)
        if [ -z "$APK_PATH" ]; then
          echo "No APK file found!"
          exit 1
        fi
        echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT
        echo "apk_name=$(basename $APK_PATH)" >> $GITHUB_OUTPUT
        echo "Found APK: $APK_PATH"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.version }}
        release_name: 德邻盒子 ${{ github.event.inputs.version }}
        body: |
          ## 德邻盒子 Android 版本 ${{ github.event.inputs.version }}

          ### 下载说明
          - 下载 APK 文件并安装到 Android 设备
          - 支持 Android 7.0 (API 24) 及以上版本

          ### 更新内容
          - 自动构建的 Android 版本

          ---
          构建时间: ${{ github.run_id }}
        draft: false
        prerelease: false

    - name: Upload APK to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.find-apk.outputs.apk_path }}
        asset_name: delin-${{ github.event.inputs.version }}-android.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Build Summary
      run: |
        echo "## 构建完成 ✅" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**版本:** ${{ github.event.inputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "**APK 文件:** ${{ steps.find-apk.outputs.apk_name }}" >> $GITHUB_STEP_SUMMARY
        echo "**Release 链接:** ${{ steps.create_release.outputs.html_url }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "APK 已成功上传到 Release，可以直接下载安装。" >> $GITHUB_STEP_SUMMARY