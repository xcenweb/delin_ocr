name: Create Release from CHANGELOG

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 拉取所有历史以便检查标签

      - name: Extract latest version from CHANGELOG
        id: extract_version
        run: |
          # 读取CHANGELOG内容
          content=$(cat CHANGELOG.md)

          # 提取最新版本号（第一个##后面的内容）
          version=$(echo "$content" | grep -m 1 '^## ' | sed 's/## //')

          # 提取该版本的内容（直到下一个##或文件结束）
          body=$(echo "$content" | awk -v version="$version" '
            BEGIN { capture = 0 }
            $0 ~ "^## " version { capture = 1; next }  # 找到版本行，开始捕获
            capture == 1 && $0 ~ "^## " { exit }       # 遇到下一个版本，停止
            capture == 1 { print }                     # 捕获内容
          ')

          # 输出变量供后续步骤使用
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "body<<EOF" >> $GITHUB_OUTPUT
          echo "$body" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Check if tag already exists
        id: check_tag
        run: |
          if git rev-parse "${{ steps.extract_version.outputs.version }}" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        if: steps.check_tag.outputs.exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.extract_version.outputs.version }}
          name: ${{ steps.extract_version.outputs.version }}
          body: ${{ steps.extract_version.outputs.body }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify if release exists
        if: steps.check_tag.outputs.exists == 'true'
        run: |
          echo "Release ${{ steps.extract_version.outputs.version }} already exists. Skipping creation."
